//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Imputs/Controles Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlesPlayer: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlesPlayer()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controles Player"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""599ad91c-49c9-4698-91d0-ff6e3d158f02"",
            ""actions"": [
                {
                    ""name"": ""Movimentacao"",
                    ""type"": ""Value"",
                    ""id"": ""4af94549-4b83-4041-95d0-567f819c058a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""f5ee63c2-a1df-434e-aa60-53dbf0b5a391"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AtkMeele"",
                    ""type"": ""Button"",
                    ""id"": ""41e7f1de-d3a7-43a8-9178-5b55fd66b48e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AtkRanged"",
                    ""type"": ""Button"",
                    ""id"": ""e58fc5db-8a98-4aeb-a7c5-a20655f94cac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Troca"",
                    ""type"": ""Button"",
                    ""id"": ""55fffd58-2170-41bf-984b-769d44a48d95"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Movimento"",
                    ""id"": ""eeafe6ff-abe3-422a-b615-8bb49e804848"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ad4358e5-26d9-4976-b07a-3003bdd81618"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""58891e46-11b7-4c18-8210-100020654837"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0b657964-6d1b-44ef-a160-000986fa2d49"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f1b39600-c6d7-42b9-92e8-aa2c4b527aef"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""720b3964-f1f7-4c62-acf5-dbde4489468a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1356fd4d-1bea-43f5-81ae-802abc180f36"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81dd6ff7-15ef-4555-99f1-249bf32c67d5"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""901c555a-b5fb-4ccd-bdf9-73af30392397"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AtkMeele"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04198942-b152-4edf-80b8-6bec23d65371"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AtkMeele"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0078e94c-a632-4509-afbd-c91eed7eceff"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AtkRanged"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34fd344c-3702-4d4f-974d-2f0c140b8088"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AtkRanged"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""511c83bb-cb73-4462-9d0f-8c274217462e"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Troca"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player2"",
            ""id"": ""b5353125-3b9d-491d-9dc6-a4b555835a50"",
            ""actions"": [
                {
                    ""name"": ""Movimentacao"",
                    ""type"": ""Value"",
                    ""id"": ""1cfe677b-8eb8-4a01-98f8-18395930f96a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""978bc484-6b3d-44f6-9022-8709067116ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MeeleAtk"",
                    ""type"": ""Button"",
                    ""id"": ""c2071726-2391-4afc-8ef2-5e33543fcc6e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""movimentoP2"",
                    ""id"": ""54f3a4da-bae9-4ed2-9c10-3739d49a182f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5b2fc3fe-1b41-492d-b0fc-07401f5022f3"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""92542c28-bd58-475f-aee5-969cf32fe4ab"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bab0e733-977c-432e-a983-aa0d6113ad03"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9e1cf30a-36cb-4cae-a06e-84f24ec9f84f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8f9ba905-6f3c-4969-8ef2-782c354a9fb1"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86469a66-3d59-4b14-9b24-d54f48217d5d"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MeeleAtk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player1Selection"",
            ""id"": ""c89c7cd9-0f00-4204-9944-cad3670a67f9"",
            ""actions"": [
                {
                    ""name"": ""Direita"",
                    ""type"": ""Button"",
                    ""id"": ""cd19b4c7-0df9-4f80-b8a5-07cb0f332f8b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cima"",
                    ""type"": ""Button"",
                    ""id"": ""ae2fc875-120f-445c-8e32-a76f906d0e39"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Esquerda"",
                    ""type"": ""Button"",
                    ""id"": ""c04be292-2908-4ccc-8ae6-a0777adf5a6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Baixo"",
                    ""type"": ""Button"",
                    ""id"": ""a95f02af-19d3-46f9-87f6-acadb107f6cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Enter"",
                    ""type"": ""Button"",
                    ""id"": ""78044b63-76dd-4d81-8133-caec21471509"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Voltar"",
                    ""type"": ""Button"",
                    ""id"": ""35ff1679-d43d-4497-95e1-154b59e2c7b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""91a9d08c-d6f6-494d-9f46-c4eb2973c517"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direita"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1ac1664-c5cc-410d-8a49-c76913918445"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esquerda"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66d0ce14-ca57-43e3-98fa-b87708c698d7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cima"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb7abb63-2aa4-4bf0-a92e-7c7445c816e7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Baixo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5d39e96-3add-4c43-b714-72d7d1ad5246"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa0bdcff-b1f0-4afd-bfe5-2b27b57887ed"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Voltar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player2Selection"",
            ""id"": ""e73452b4-63f3-4c5e-819e-c258f5ccb091"",
            ""actions"": [
                {
                    ""name"": ""Direita"",
                    ""type"": ""Button"",
                    ""id"": ""e896dad7-b2c4-4228-a581-21317efaf886"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cima"",
                    ""type"": ""Button"",
                    ""id"": ""16946866-b969-49c5-88b9-38e1a66718d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Baixo"",
                    ""type"": ""Button"",
                    ""id"": ""acd4aad1-a595-440e-88cd-0430bf428908"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Esquerda"",
                    ""type"": ""Button"",
                    ""id"": ""52cc9d2f-829d-453a-ae6c-548e6edfd5a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Enter"",
                    ""type"": ""Button"",
                    ""id"": ""68a6c6a5-cd77-4b95-8a8f-27a3d8074ad8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Voltar"",
                    ""type"": ""Button"",
                    ""id"": ""b8f09fb5-31e3-4af1-b79c-6cba07b86202"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c142a689-7769-44b0-a1ff-32c05db7331e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direita"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5bab1107-ed1a-4c40-b320-fee6cd4f7e90"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esquerda"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d40fa486-a324-4886-813c-4c0efccee67d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cima"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8be0ef48-52bc-4717-a6ca-91220397eeeb"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Baixo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09934497-ad26-4e85-bfdd-c0d6cfdc2f4b"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5068ee90-4ec4-4d53-a9df-e9b6792a76c8"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Voltar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movimentacao = m_Player.FindAction("Movimentacao", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_AtkMeele = m_Player.FindAction("AtkMeele", throwIfNotFound: true);
        m_Player_AtkRanged = m_Player.FindAction("AtkRanged", throwIfNotFound: true);
        m_Player_Troca = m_Player.FindAction("Troca", throwIfNotFound: true);
        // Player2
        m_Player2 = asset.FindActionMap("Player2", throwIfNotFound: true);
        m_Player2_Movimentacao = m_Player2.FindAction("Movimentacao", throwIfNotFound: true);
        m_Player2_Jump = m_Player2.FindAction("Jump", throwIfNotFound: true);
        m_Player2_MeeleAtk = m_Player2.FindAction("MeeleAtk", throwIfNotFound: true);
        // Player1Selection
        m_Player1Selection = asset.FindActionMap("Player1Selection", throwIfNotFound: true);
        m_Player1Selection_Direita = m_Player1Selection.FindAction("Direita", throwIfNotFound: true);
        m_Player1Selection_Cima = m_Player1Selection.FindAction("Cima", throwIfNotFound: true);
        m_Player1Selection_Esquerda = m_Player1Selection.FindAction("Esquerda", throwIfNotFound: true);
        m_Player1Selection_Baixo = m_Player1Selection.FindAction("Baixo", throwIfNotFound: true);
        m_Player1Selection_Enter = m_Player1Selection.FindAction("Enter", throwIfNotFound: true);
        m_Player1Selection_Voltar = m_Player1Selection.FindAction("Voltar", throwIfNotFound: true);
        // Player2Selection
        m_Player2Selection = asset.FindActionMap("Player2Selection", throwIfNotFound: true);
        m_Player2Selection_Direita = m_Player2Selection.FindAction("Direita", throwIfNotFound: true);
        m_Player2Selection_Cima = m_Player2Selection.FindAction("Cima", throwIfNotFound: true);
        m_Player2Selection_Baixo = m_Player2Selection.FindAction("Baixo", throwIfNotFound: true);
        m_Player2Selection_Esquerda = m_Player2Selection.FindAction("Esquerda", throwIfNotFound: true);
        m_Player2Selection_Enter = m_Player2Selection.FindAction("Enter", throwIfNotFound: true);
        m_Player2Selection_Voltar = m_Player2Selection.FindAction("Voltar", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movimentacao;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_AtkMeele;
    private readonly InputAction m_Player_AtkRanged;
    private readonly InputAction m_Player_Troca;
    public struct PlayerActions
    {
        private @ControlesPlayer m_Wrapper;
        public PlayerActions(@ControlesPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movimentacao => m_Wrapper.m_Player_Movimentacao;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @AtkMeele => m_Wrapper.m_Player_AtkMeele;
        public InputAction @AtkRanged => m_Wrapper.m_Player_AtkRanged;
        public InputAction @Troca => m_Wrapper.m_Player_Troca;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movimentacao.started += instance.OnMovimentacao;
            @Movimentacao.performed += instance.OnMovimentacao;
            @Movimentacao.canceled += instance.OnMovimentacao;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @AtkMeele.started += instance.OnAtkMeele;
            @AtkMeele.performed += instance.OnAtkMeele;
            @AtkMeele.canceled += instance.OnAtkMeele;
            @AtkRanged.started += instance.OnAtkRanged;
            @AtkRanged.performed += instance.OnAtkRanged;
            @AtkRanged.canceled += instance.OnAtkRanged;
            @Troca.started += instance.OnTroca;
            @Troca.performed += instance.OnTroca;
            @Troca.canceled += instance.OnTroca;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movimentacao.started -= instance.OnMovimentacao;
            @Movimentacao.performed -= instance.OnMovimentacao;
            @Movimentacao.canceled -= instance.OnMovimentacao;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @AtkMeele.started -= instance.OnAtkMeele;
            @AtkMeele.performed -= instance.OnAtkMeele;
            @AtkMeele.canceled -= instance.OnAtkMeele;
            @AtkRanged.started -= instance.OnAtkRanged;
            @AtkRanged.performed -= instance.OnAtkRanged;
            @AtkRanged.canceled -= instance.OnAtkRanged;
            @Troca.started -= instance.OnTroca;
            @Troca.performed -= instance.OnTroca;
            @Troca.canceled -= instance.OnTroca;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Player2
    private readonly InputActionMap m_Player2;
    private List<IPlayer2Actions> m_Player2ActionsCallbackInterfaces = new List<IPlayer2Actions>();
    private readonly InputAction m_Player2_Movimentacao;
    private readonly InputAction m_Player2_Jump;
    private readonly InputAction m_Player2_MeeleAtk;
    public struct Player2Actions
    {
        private @ControlesPlayer m_Wrapper;
        public Player2Actions(@ControlesPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movimentacao => m_Wrapper.m_Player2_Movimentacao;
        public InputAction @Jump => m_Wrapper.m_Player2_Jump;
        public InputAction @MeeleAtk => m_Wrapper.m_Player2_MeeleAtk;
        public InputActionMap Get() { return m_Wrapper.m_Player2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player2Actions set) { return set.Get(); }
        public void AddCallbacks(IPlayer2Actions instance)
        {
            if (instance == null || m_Wrapper.m_Player2ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Player2ActionsCallbackInterfaces.Add(instance);
            @Movimentacao.started += instance.OnMovimentacao;
            @Movimentacao.performed += instance.OnMovimentacao;
            @Movimentacao.canceled += instance.OnMovimentacao;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @MeeleAtk.started += instance.OnMeeleAtk;
            @MeeleAtk.performed += instance.OnMeeleAtk;
            @MeeleAtk.canceled += instance.OnMeeleAtk;
        }

        private void UnregisterCallbacks(IPlayer2Actions instance)
        {
            @Movimentacao.started -= instance.OnMovimentacao;
            @Movimentacao.performed -= instance.OnMovimentacao;
            @Movimentacao.canceled -= instance.OnMovimentacao;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @MeeleAtk.started -= instance.OnMeeleAtk;
            @MeeleAtk.performed -= instance.OnMeeleAtk;
            @MeeleAtk.canceled -= instance.OnMeeleAtk;
        }

        public void RemoveCallbacks(IPlayer2Actions instance)
        {
            if (m_Wrapper.m_Player2ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayer2Actions instance)
        {
            foreach (var item in m_Wrapper.m_Player2ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Player2ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Player2Actions @Player2 => new Player2Actions(this);

    // Player1Selection
    private readonly InputActionMap m_Player1Selection;
    private List<IPlayer1SelectionActions> m_Player1SelectionActionsCallbackInterfaces = new List<IPlayer1SelectionActions>();
    private readonly InputAction m_Player1Selection_Direita;
    private readonly InputAction m_Player1Selection_Cima;
    private readonly InputAction m_Player1Selection_Esquerda;
    private readonly InputAction m_Player1Selection_Baixo;
    private readonly InputAction m_Player1Selection_Enter;
    private readonly InputAction m_Player1Selection_Voltar;
    public struct Player1SelectionActions
    {
        private @ControlesPlayer m_Wrapper;
        public Player1SelectionActions(@ControlesPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @Direita => m_Wrapper.m_Player1Selection_Direita;
        public InputAction @Cima => m_Wrapper.m_Player1Selection_Cima;
        public InputAction @Esquerda => m_Wrapper.m_Player1Selection_Esquerda;
        public InputAction @Baixo => m_Wrapper.m_Player1Selection_Baixo;
        public InputAction @Enter => m_Wrapper.m_Player1Selection_Enter;
        public InputAction @Voltar => m_Wrapper.m_Player1Selection_Voltar;
        public InputActionMap Get() { return m_Wrapper.m_Player1Selection; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player1SelectionActions set) { return set.Get(); }
        public void AddCallbacks(IPlayer1SelectionActions instance)
        {
            if (instance == null || m_Wrapper.m_Player1SelectionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Player1SelectionActionsCallbackInterfaces.Add(instance);
            @Direita.started += instance.OnDireita;
            @Direita.performed += instance.OnDireita;
            @Direita.canceled += instance.OnDireita;
            @Cima.started += instance.OnCima;
            @Cima.performed += instance.OnCima;
            @Cima.canceled += instance.OnCima;
            @Esquerda.started += instance.OnEsquerda;
            @Esquerda.performed += instance.OnEsquerda;
            @Esquerda.canceled += instance.OnEsquerda;
            @Baixo.started += instance.OnBaixo;
            @Baixo.performed += instance.OnBaixo;
            @Baixo.canceled += instance.OnBaixo;
            @Enter.started += instance.OnEnter;
            @Enter.performed += instance.OnEnter;
            @Enter.canceled += instance.OnEnter;
            @Voltar.started += instance.OnVoltar;
            @Voltar.performed += instance.OnVoltar;
            @Voltar.canceled += instance.OnVoltar;
        }

        private void UnregisterCallbacks(IPlayer1SelectionActions instance)
        {
            @Direita.started -= instance.OnDireita;
            @Direita.performed -= instance.OnDireita;
            @Direita.canceled -= instance.OnDireita;
            @Cima.started -= instance.OnCima;
            @Cima.performed -= instance.OnCima;
            @Cima.canceled -= instance.OnCima;
            @Esquerda.started -= instance.OnEsquerda;
            @Esquerda.performed -= instance.OnEsquerda;
            @Esquerda.canceled -= instance.OnEsquerda;
            @Baixo.started -= instance.OnBaixo;
            @Baixo.performed -= instance.OnBaixo;
            @Baixo.canceled -= instance.OnBaixo;
            @Enter.started -= instance.OnEnter;
            @Enter.performed -= instance.OnEnter;
            @Enter.canceled -= instance.OnEnter;
            @Voltar.started -= instance.OnVoltar;
            @Voltar.performed -= instance.OnVoltar;
            @Voltar.canceled -= instance.OnVoltar;
        }

        public void RemoveCallbacks(IPlayer1SelectionActions instance)
        {
            if (m_Wrapper.m_Player1SelectionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayer1SelectionActions instance)
        {
            foreach (var item in m_Wrapper.m_Player1SelectionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Player1SelectionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Player1SelectionActions @Player1Selection => new Player1SelectionActions(this);

    // Player2Selection
    private readonly InputActionMap m_Player2Selection;
    private List<IPlayer2SelectionActions> m_Player2SelectionActionsCallbackInterfaces = new List<IPlayer2SelectionActions>();
    private readonly InputAction m_Player2Selection_Direita;
    private readonly InputAction m_Player2Selection_Cima;
    private readonly InputAction m_Player2Selection_Baixo;
    private readonly InputAction m_Player2Selection_Esquerda;
    private readonly InputAction m_Player2Selection_Enter;
    private readonly InputAction m_Player2Selection_Voltar;
    public struct Player2SelectionActions
    {
        private @ControlesPlayer m_Wrapper;
        public Player2SelectionActions(@ControlesPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @Direita => m_Wrapper.m_Player2Selection_Direita;
        public InputAction @Cima => m_Wrapper.m_Player2Selection_Cima;
        public InputAction @Baixo => m_Wrapper.m_Player2Selection_Baixo;
        public InputAction @Esquerda => m_Wrapper.m_Player2Selection_Esquerda;
        public InputAction @Enter => m_Wrapper.m_Player2Selection_Enter;
        public InputAction @Voltar => m_Wrapper.m_Player2Selection_Voltar;
        public InputActionMap Get() { return m_Wrapper.m_Player2Selection; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player2SelectionActions set) { return set.Get(); }
        public void AddCallbacks(IPlayer2SelectionActions instance)
        {
            if (instance == null || m_Wrapper.m_Player2SelectionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Player2SelectionActionsCallbackInterfaces.Add(instance);
            @Direita.started += instance.OnDireita;
            @Direita.performed += instance.OnDireita;
            @Direita.canceled += instance.OnDireita;
            @Cima.started += instance.OnCima;
            @Cima.performed += instance.OnCima;
            @Cima.canceled += instance.OnCima;
            @Baixo.started += instance.OnBaixo;
            @Baixo.performed += instance.OnBaixo;
            @Baixo.canceled += instance.OnBaixo;
            @Esquerda.started += instance.OnEsquerda;
            @Esquerda.performed += instance.OnEsquerda;
            @Esquerda.canceled += instance.OnEsquerda;
            @Enter.started += instance.OnEnter;
            @Enter.performed += instance.OnEnter;
            @Enter.canceled += instance.OnEnter;
            @Voltar.started += instance.OnVoltar;
            @Voltar.performed += instance.OnVoltar;
            @Voltar.canceled += instance.OnVoltar;
        }

        private void UnregisterCallbacks(IPlayer2SelectionActions instance)
        {
            @Direita.started -= instance.OnDireita;
            @Direita.performed -= instance.OnDireita;
            @Direita.canceled -= instance.OnDireita;
            @Cima.started -= instance.OnCima;
            @Cima.performed -= instance.OnCima;
            @Cima.canceled -= instance.OnCima;
            @Baixo.started -= instance.OnBaixo;
            @Baixo.performed -= instance.OnBaixo;
            @Baixo.canceled -= instance.OnBaixo;
            @Esquerda.started -= instance.OnEsquerda;
            @Esquerda.performed -= instance.OnEsquerda;
            @Esquerda.canceled -= instance.OnEsquerda;
            @Enter.started -= instance.OnEnter;
            @Enter.performed -= instance.OnEnter;
            @Enter.canceled -= instance.OnEnter;
            @Voltar.started -= instance.OnVoltar;
            @Voltar.performed -= instance.OnVoltar;
            @Voltar.canceled -= instance.OnVoltar;
        }

        public void RemoveCallbacks(IPlayer2SelectionActions instance)
        {
            if (m_Wrapper.m_Player2SelectionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayer2SelectionActions instance)
        {
            foreach (var item in m_Wrapper.m_Player2SelectionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Player2SelectionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Player2SelectionActions @Player2Selection => new Player2SelectionActions(this);
    public interface IPlayerActions
    {
        void OnMovimentacao(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAtkMeele(InputAction.CallbackContext context);
        void OnAtkRanged(InputAction.CallbackContext context);
        void OnTroca(InputAction.CallbackContext context);
    }
    public interface IPlayer2Actions
    {
        void OnMovimentacao(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMeeleAtk(InputAction.CallbackContext context);
    }
    public interface IPlayer1SelectionActions
    {
        void OnDireita(InputAction.CallbackContext context);
        void OnCima(InputAction.CallbackContext context);
        void OnEsquerda(InputAction.CallbackContext context);
        void OnBaixo(InputAction.CallbackContext context);
        void OnEnter(InputAction.CallbackContext context);
        void OnVoltar(InputAction.CallbackContext context);
    }
    public interface IPlayer2SelectionActions
    {
        void OnDireita(InputAction.CallbackContext context);
        void OnCima(InputAction.CallbackContext context);
        void OnBaixo(InputAction.CallbackContext context);
        void OnEsquerda(InputAction.CallbackContext context);
        void OnEnter(InputAction.CallbackContext context);
        void OnVoltar(InputAction.CallbackContext context);
    }
}
