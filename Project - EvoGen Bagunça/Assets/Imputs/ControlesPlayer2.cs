//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Imputs/ControlesPlayer2.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlesPlayer2: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlesPlayer2()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControlesPlayer2"",
    ""maps"": [
        {
            ""name"": ""Player2"",
            ""id"": ""322f51bb-7c54-4fd3-ba8a-25183f889a6f"",
            ""actions"": [
                {
                    ""name"": ""movimentacao"",
                    ""type"": ""Value"",
                    ""id"": ""ac8ba97a-861e-4491-8d57-63a2cb95c73f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pulo"",
                    ""type"": ""Button"",
                    ""id"": ""e351cd66-573a-4800-adb1-e125c18499de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""movimento"",
                    ""id"": ""e6014b66-9401-44cb-94fa-c41e2efbafee"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimentacao"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fc288e3b-1c76-44fe-a8ad-731535792f25"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a3dfb51a-103f-4763-9b94-4ff717c31d29"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""12465cd6-e354-4a45-aac8-0940aba2c525"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c9e7f99c-a445-4e30-b9d6-a91c42d2ef10"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""movimentacao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c2aba7ca-3205-4082-bcf8-ab7333216d98"",
                    ""path"": ""<Keyboard>/numpad0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pulo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player2
        m_Player2 = asset.FindActionMap("Player2", throwIfNotFound: true);
        m_Player2_movimentacao = m_Player2.FindAction("movimentacao", throwIfNotFound: true);
        m_Player2_Pulo = m_Player2.FindAction("Pulo", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player2
    private readonly InputActionMap m_Player2;
    private List<IPlayer2Actions> m_Player2ActionsCallbackInterfaces = new List<IPlayer2Actions>();
    private readonly InputAction m_Player2_movimentacao;
    private readonly InputAction m_Player2_Pulo;
    public struct Player2Actions
    {
        private @ControlesPlayer2 m_Wrapper;
        public Player2Actions(@ControlesPlayer2 wrapper) { m_Wrapper = wrapper; }
        public InputAction @movimentacao => m_Wrapper.m_Player2_movimentacao;
        public InputAction @Pulo => m_Wrapper.m_Player2_Pulo;
        public InputActionMap Get() { return m_Wrapper.m_Player2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player2Actions set) { return set.Get(); }
        public void AddCallbacks(IPlayer2Actions instance)
        {
            if (instance == null || m_Wrapper.m_Player2ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Player2ActionsCallbackInterfaces.Add(instance);
            @movimentacao.started += instance.OnMovimentacao;
            @movimentacao.performed += instance.OnMovimentacao;
            @movimentacao.canceled += instance.OnMovimentacao;
            @Pulo.started += instance.OnPulo;
            @Pulo.performed += instance.OnPulo;
            @Pulo.canceled += instance.OnPulo;
        }

        private void UnregisterCallbacks(IPlayer2Actions instance)
        {
            @movimentacao.started -= instance.OnMovimentacao;
            @movimentacao.performed -= instance.OnMovimentacao;
            @movimentacao.canceled -= instance.OnMovimentacao;
            @Pulo.started -= instance.OnPulo;
            @Pulo.performed -= instance.OnPulo;
            @Pulo.canceled -= instance.OnPulo;
        }

        public void RemoveCallbacks(IPlayer2Actions instance)
        {
            if (m_Wrapper.m_Player2ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayer2Actions instance)
        {
            foreach (var item in m_Wrapper.m_Player2ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Player2ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Player2Actions @Player2 => new Player2Actions(this);
    public interface IPlayer2Actions
    {
        void OnMovimentacao(InputAction.CallbackContext context);
        void OnPulo(InputAction.CallbackContext context);
    }
}
